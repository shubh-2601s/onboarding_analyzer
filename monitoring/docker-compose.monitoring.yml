# üöÄ Onboarding Analyzer - Enterprise Monitoring Configuration
# Comprehensive observability and alerting setup

version: '3.8'

x-logging: &default-logging
  driver: "json-file"
  options:
    max-size: "10m"
    max-file: "3"

services:
  # ===============================================
  # üìä PROMETHEUS - Metrics Collection
  # ===============================================
  prometheus:
    image: prom/prometheus:latest
    container_name: onboarding-prometheus
    ports:
      - "9090:9090"
    volumes:
      - ./monitoring/prometheus.yml:/etc/prometheus/prometheus.yml
      - prometheus_data:/prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=/etc/prometheus/console_libraries'
      - '--web.console.templates=/etc/prometheus/consoles'
      - '--storage.tsdb.retention.time=200h'
      - '--web.enable-lifecycle'
    restart: unless-stopped
    logging: *default-logging
    networks:
      - monitoring

  # ===============================================
  # üìà GRAFANA - Visualization Dashboard
  # ===============================================
  grafana:
    image: grafana/grafana:latest
    container_name: onboarding-grafana
    ports:
      - "3001:3000"
    volumes:
      - grafana_data:/var/lib/grafana
      - ./monitoring/grafana/provisioning:/etc/grafana/provisioning
      - ./monitoring/grafana/dashboards:/var/lib/grafana/dashboards
    environment:
      - GF_SECURITY_ADMIN_USER=admin
      - GF_SECURITY_ADMIN_PASSWORD=secure-grafana-password-change-me
      - GF_USERS_ALLOW_SIGN_UP=false
      - GF_INSTALL_PLUGINS=grafana-clock-panel,grafana-simple-json-datasource,grafana-worldmap-panel
    restart: unless-stopped
    logging: *default-logging
    networks:
      - monitoring

  # ===============================================
  # üîç ELASTICSEARCH - Log Analysis
  # ===============================================
  elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch:8.11.0
    container_name: onboarding-elasticsearch
    environment:
      - discovery.type=single-node
      - "ES_JAVA_OPTS=-Xms512m -Xmx512m"
      - xpack.security.enabled=false
    ports:
      - "9200:9200"
    volumes:
      - elasticsearch_data:/usr/share/elasticsearch/data
    restart: unless-stopped
    logging: *default-logging
    networks:
      - monitoring

  # ===============================================
  # üìä KIBANA - Log Visualization
  # ===============================================
  kibana:
    image: docker.elastic.co/kibana/kibana:8.11.0
    container_name: onboarding-kibana
    ports:
      - "5601:5601"
    environment:
      - ELASTICSEARCH_HOSTS=http://elasticsearch:9200
    depends_on:
      - elasticsearch
    restart: unless-stopped
    logging: *default-logging
    networks:
      - monitoring

  # ===============================================
  # üìä NODE EXPORTER - System Metrics
  # ===============================================
  node-exporter:
    image: prom/node-exporter:latest
    container_name: onboarding-node-exporter
    ports:
      - "9100:9100"
    volumes:
      - /proc:/host/proc:ro
      - /sys:/host/sys:ro
      - /:/rootfs:ro
    command:
      - '--path.procfs=/host/proc'
      - '--path.rootfs=/rootfs'
      - '--path.sysfs=/host/sys'
      - '--collector.filesystem.mount-points-exclude=^/(sys|proc|dev|host|etc)($$|/)'
    restart: unless-stopped
    logging: *default-logging
    networks:
      - monitoring

  # ===============================================
  # üö® ALERTMANAGER - Alert Routing
  # ===============================================
  alertmanager:
    image: prom/alertmanager:latest
    container_name: onboarding-alertmanager
    ports:
      - "9093:9093"
    volumes:
      - ./monitoring/alertmanager.yml:/etc/alertmanager/alertmanager.yml
      - alertmanager_data:/alertmanager
    command:
      - '--config.file=/etc/alertmanager/alertmanager.yml'
      - '--storage.path=/alertmanager'
      - '--web.external-url=http://localhost:9093'
    restart: unless-stopped
    logging: *default-logging
    networks:
      - monitoring

  # ===============================================
  # üìä CADVISOR - Container Metrics
  # ===============================================
  cadvisor:
    image: gcr.io/cadvisor/cadvisor:latest
    container_name: onboarding-cadvisor
    ports:
      - "8080:8080"
    volumes:
      - /:/rootfs:ro
      - /var/run:/var/run:rw
      - /sys:/sys:ro
      - /var/lib/docker:/var/lib/docker:ro
    restart: unless-stopped
    logging: *default-logging
    networks:
      - monitoring

  # ===============================================
  # üîç JAEGER - Distributed Tracing
  # ===============================================
  jaeger:
    image: jaegertracing/all-in-one:latest
    container_name: onboarding-jaeger
    ports:
      - "16686:16686"
      - "14268:14268"
    environment:
      - COLLECTOR_OTLP_ENABLED=true
    restart: unless-stopped
    logging: *default-logging
    networks:
      - monitoring

  # ===============================================
  # üìä REDIS EXPORTER - Redis Metrics
  # ===============================================
  redis-exporter:
    image: oliver006/redis_exporter:latest
    container_name: onboarding-redis-exporter
    ports:
      - "9121:9121"
    environment:
      - REDIS_ADDR=redis://redis:6379
    depends_on:
      - redis
    restart: unless-stopped
    logging: *default-logging
    networks:
      - monitoring

  # ===============================================
  # üîÑ UPTIME KUMA - Service Monitoring
  # ===============================================
  uptime-kuma:
    image: louislam/uptime-kuma:latest
    container_name: onboarding-uptime-kuma
    ports:
      - "3002:3001"
    volumes:
      - uptime_kuma_data:/app/data
    restart: unless-stopped
    logging: *default-logging
    networks:
      - monitoring

volumes:
  prometheus_data:
    driver: local
  grafana_data:
    driver: local
  elasticsearch_data:
    driver: local
  alertmanager_data:
    driver: local
  uptime_kuma_data:
    driver: local

networks:
  monitoring:
    driver: bridge